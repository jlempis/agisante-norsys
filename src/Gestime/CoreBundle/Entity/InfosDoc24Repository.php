<?php

namespace Gestime\CoreBundle\Entity;
use Doctrine\ORM\Query\Expr\Join;
/**
 * InfosDoc24Repository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InfosDoc24Repository extends \Doctrine\ORM\EntityRepository
{

  /**
   * @param $infoId
   * @return array
   */
  public function getTarifs($infoId) {
    $tarifs =  $this->createQueryBuilder('i')
      ->select('i', 'tarifications')
      ->leftJoin('i.tarifications', 'tarifications')
      ->where('i.id = :infoId')
      ->setParameter('infoId', $infoId)
      ->getQuery()
      ->getArrayResult();

    if (count($tarifs) > 0) {
      return $tarifs[0];
    }
    return array();
  }

  /**
   * @param $infoId
   * @return array
   */
  public function getTransports($infoId) {
    $qb =  $this->createQueryBuilder('i')
      ->select( 'moyensTransport.id, moyensTransport.numeroLigne, moyensTransport.arret', 'param.value')
      ->leftJoin('i.transports', 'moyensTransport');

    $qb->leftJoin('Gestime\CoreBundle\Entity\Parametre',
        'param', Join::WITH, $qb->expr()->andX(
          $qb->expr()->eq('moyensTransport.type', 'param.idParametre'),
          $qb->expr()->eq('param.type', ':typeParam')
        )
      )
      ->setParameter('typeParam', 'TypeTransport')
      ->where('i.id = :infoId')
      ->setParameter('infoId', $infoId);

    $transports = $qb->getQuery()->getArrayResult();

     return $transports;
  }


  /**
   * @param $infoId
   * @return array
   */
  public function getLangues($infoId) {
    $langues =  $this->createQueryBuilder('i')
      ->select('i', 'langues')
      ->leftJoin('i.langues', 'langues')
      ->where('i.id = :infoId')
      ->setParameter('infoId', $infoId)
      ->getQuery()
      ->getArrayResult();

    if (count($langues) > 0) {
      return $langues[0];
    }
    return array();
  }

  /**
   * @param $infoId
   * @return array
   */
  public function getSpecialitesMedicales($infoId) {
    $specialitesMedicales =  $this->createQueryBuilder('i')
      ->select('i', 'specialitesMedicales')
      ->leftJoin('i.specialitesMedicales', 'specialitesMedicales')
      ->where('i.id = :infoId')
      ->setParameter('infoId', $infoId)
      ->getQuery()
      ->getArrayResult();

    if (count($specialitesMedicales) > 0) {
      return $specialitesMedicales[0];
    }
    return array();
  }

}
