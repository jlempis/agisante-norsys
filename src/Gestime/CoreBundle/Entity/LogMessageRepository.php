<?php

namespace Gestime\CoreBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * LogMessageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LogMessageRepository extends EntityRepository
{
    /**
     * Retourne la liste des SMS à traiter
     * @return array Liste des lignes de la log de message
     */
    public function getListSmsATraiter()
    {
        return $this->createQueryBuilder('s')
            ->where('s.statut = :afaire')
            ->setParameter('afaire', 'A')
            ->getQuery()
            ->getResult();
    }

    /**
     * Retourne la liste des SMS qui n'ont pas encore de réponse
     * Mais ont été envoyés il y a moins de 2 jours
     * @return array Liste des lignes de la log de message
     */
    public function getListReponseAChercher()
    {
        return $this->createQueryBuilder('s')
            ->where('s.statut = :afaire')
            ->andwhere('s.dateReception  is NULL')
            ->andwhere('s.dateEnvoi > :dateReprise')
            ->setParameter('afaire', 'R')
            ->setParameter('dateReprise', new \DateTime('-2 days'), \Doctrine\DBAL\Types\Type::DATETIME)
            ->getQuery()
            ->getResult();
    }

    /**
     * Retourne la liste des SMS pour affichage dans les rapports
     * @return array Liste des lignes de la log de message
     */
    /**
     * [getListSMS description]
     * @param int    $medecinId Id du medecin
     * @param String $debut
     * @param String $fin
     * @return array Liste des lignes de la log de message
     */
    public function getListSMS($medecinId, $debut, $fin)
    {
        $qb = $this->createQueryBuilder('s')
            ->select('s, p.value, pers.prenom, pers.nom')
            ->leftjoin('s.medecin', 'med')
            ->leftJoin('Gestime\CoreBundle\Entity\Personne', 'pers',
                \Doctrine\ORM\Query\Expr\Join::WITH,
                's.patientId = pers.id'
            )
            ->leftJoin('Gestime\CoreBundle\Entity\Parametre', 'p',
                \Doctrine\ORM\Query\Expr\Join::WITH,
                'pers.civilite = p.idParametre'
            )
            ->where('s.dateEnvoi >= :debut')
            ->andwhere('s.dateEnvoi <= :fin')
            ->setParameter('debut', $debut)
            ->setParameter('fin', $fin);

        if ($medecinId > 0) {
            $qb->andwhere('med.idMedecin = :medecinId')
               ->setParameter('medecinId', $medecinId);
        }

        return $qb;
    }
}
